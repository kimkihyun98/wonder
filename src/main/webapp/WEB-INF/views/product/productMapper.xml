<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace = "kr.co.product.productMapper">
  
  <!-- 상품목록 보여주기 -->
  <select id="productselectall" resultType="ProductDTO">
   	SELECT distinct *
	FROM product where product_code='판매중'
		GROUP BY  product_name order by rand() limit 40;
  </select>
  <!-- admin이 올린 상품목록 조회 -->
  <select id="adimproduct" resultType="ProductDTO">
  	select * from product
  	where product_code ='main'
  </select>
  <!-- admin이 올린 상품상세목록 조회 -->
  <select id="adimproductdetail" resultType="ProductDTO">
  	select * from product
  	where mem_id ='admin' and product_id =#{product_id}
  </select>
  
  <!-- 상품 사진 가져오기 -->
  <select id="productimg">
  	select *
  	from product_image
  	where product_id=#{product_id}
  </select>
  
  <!-- 상품 상세페이지 id로 보여주기 -->
  <select id="productselectdeail"  resultType ="ProductDTO">
    select *
   	from product
   	where product_id = #{product_id}
   
  </select>
   <!-- 상품 상세페이지 name로 보여주기 -->
  <select id="productselectdeail2"  resultType ="ProductDTO">
    select *
   	from product
   	where product_name = #{product_name} and product_code='main'
   
  </select>
  
  <!-- 상품 검색보여주기 -->
  <select id="productserch"  parameterType="ProductDTO" resultType="ProductDTO">
   	SELECT distinct * FROM product  WHERE  product_code='main'and product_name LIKE CONCAT('%', #{product_name} '%');
   </select>
   
   
   <!-- 상품 페이징 -->
   <!--
   <select id="listCriteria" resultType="ProductDTO">
   <![CDATA[
   select *
   from product
   where p_no >0
   order by p_no desc
   limit #{pageStart},#{perPageNum}
   ]]>
   </select>
   
   <select id="countPaging" resultType="int">
   <![CDATA[
   select
   	count(p_no)
   	from product
   	where p_no >0
   	]]>
   </select>
     -->
    <!-- 위에 쿼리문상품 개수 카운트 -->
   <!-- 장바구니 추가 -->
     <insert id="addCart" >
		insert into cart(cart_id,mem_id, product_id, cart_count)
		values(#{cart_id},#{mem_id}, #{product_id}, #{cart_count}) 
	</insert>
	<!-- 장바구니에 동일한 상품 체크 -->
	<select id="countCart" resultType="int">
		select COUNT(*)
		from cart
		where mem_id= #{mem_id}
		AND product_id =#{product_id}
		</select>
	<!-- 장바구니에 동일한 상품 존재하면 수정 -->
	<update id="updateCart">
		update cart
		set cart_count = cart_count+#{cart_count}
   		where mem_id=#{mem_id}
		AND product_id= #{product_id}
	</update>

	
	<!-- 상품 주문 -->
	<insert id="paymentmove">
		INSERT INTO `wonder`.`order` 
		(`order_id`, `order_price`, `order_status`, `order_name`, `order_phone`, `order_address`, `order_address2`, `mem_id`, `product_id`) 
		VALUES (#{order_id},#{order_price},#{order_status},#{order_name},#{order_phone},#{order_address},#{order_address2},#{mem_id},#{product_id});
	</insert>
	<!-- 판매중인상품을 판매완료로 바꿔주는 메소드(주문이 완료된상태) -->
		<update id="saleupdate">
			UPDATE `wonder`.`product` 
			SET `product_code` = '판매완료' 
			WHERE product_id = #{product_id};
		</update>
	<!-- 주문한 상품의 주문자 정보와 상품정보를 orderhistoty에 추가 -->
		<insert id="orderhistoryinsert" parameterType="OrderHistoryDTO">
		INSERT INTO `wonder`.`orderhistory` 
		(`id_orderhistory`, `mem_id`, `order_id`, `product_id`) 
		VALUES (#{id_orderhistory}, #{mem_id}, #{order_id}, #{product_id});
		
		</insert>
	<!-- 회원이 주문한 상품및 회원정보 테이블 -->
	<!-- 같은 브랜드 다른상품-->
	<select id="productsimila" resultType="productDTO">
		select *
		from product
		where product_cate = #{product_cate} and product_code='main'
		GROUP BY  product_name
		order by rand() limit 8
	</select>
	<!-- 판매중인상품중 제일 가격이 높은 즉시 판매가 -->
	<select id="immediatesale" resultType="ProductDTO">
		select * from 
		product 
		where product_name =#{product_name} 
		and(product_code = '판매중'or product_code = '판매입찰' or product_code='main') 
		order by product_price desc limit 1;
	</select>

	<select id="immediatesale2" resultType="ProductDTO">
		select * from 
		product 
		where product_name =#{product_name} 
		and Product_size=#{product_size}
		and product_code = '구매입찰'
		order by product_price asc limit 1;
	</select>

	<!-- 사이즈별 구매할수있는 가격 -->
	<select id="sizeby" resultType="ProductDTO">
		select * 
		from product 
		where product_name=#{product_name} and product_size = #{product_size} and (product_code='판매중'||product_code = '판매입찰') order by product_price asc limit 1;
	</select>
	<!-- product 테이블 구매입찰 상품 추가하기 -->
		<insert id="purchasebid" parameterType="ProductDTO">
		INSERT INTO `wonder`.`product` 
		(`product_id`, `product_name`, `product_price`, `product_desc`, `product_date`, `product_hits`, `product_size`, `product_auction`, `product_cate`, `product_code`, `mem_id`, `product_img`) 
		VALUES (#{product_id}, #{product_name}, #{product_price}, #{product_desc}, NOW(), #{product_hits}, #{product_size}, #{product_auction}, #{product_cate}, '구매입찰', #{mem_id}, #{product_img});
		</insert>
		<!-- product 테이블 판매입찰 상품 추가하기 -->
		<insert id="purchasebid2" parameterType="ProductDTO">
		INSERT INTO `wonder`.`product` 
		(`product_id`, `product_name`, `product_price`, `product_desc`, `product_date`, `product_hits`, `product_size`, `product_auction`, `product_cate`, `product_code`, `mem_id`, `product_img`) 
		VALUES (#{product_id}, #{product_name}, #{product_price}, #{product_desc}, NOW(), #{product_hits}, #{product_size}, #{product_auction}, #{product_cate}, '판매입찰', #{mem_id}, #{product_img});
		</insert>
	<!--구매 예약상품을 판매자가 생겨 구매 한사람 update문-->
	<update id="updatepr">
		UPDATE 
		`wonder`.`product` 
		SET `product_code` = '구매완료'
		WHERE `product_price` = #{product_price} and product_name =#{product_name} ;
	</update>
	
	<!-- 구매자는 구매완료라는 insert문 -->
		<insert id="insertpr" parameterType="ProductDTO">
		INSERT INTO `wonder`.`product` 
		(`product_id`, `product_name`, `product_price`, `product_desc`, `product_date`, `product_hits`, `product_size`, `product_auction`, `product_cate`, `product_code`, `mem_id`, `product_img`)
		 VALUES (#{product_id}, #{product_name}, #{product_price},#{product_desc}, NOW(),#{product_hits},#{product_size},#{product_auction}, #{product_cate}, '판매완료', #{mem_id}, #{product_img});
		</insert>
		
		<update id="updatepr2">
		UPDATE 
		`wonder`.`product` 
		SET `product_code` = '판매완료'
		WHERE `product_price` = #{product_price} and product_name =#{product_name} ;
	</update>
		
		<!-- 구매자는 구매완료라는 insert문 -->
		<insert id="insertpr2" parameterType="ProductDTO">
		INSERT INTO `wonder`.`product` 
		(`product_id`, `product_name`, `product_price`, `product_desc`, `product_date`, `product_hits`, `product_size`, `product_auction`, `product_cate`, `product_code`, `mem_id`, `product_img`)
		 VALUES (#{product_id}, #{product_name}, #{product_price},#{product_desc}, NOW(),#{product_hits},#{product_size},#{product_auction}, #{product_cate}, '구매완료', #{mem_id}, #{product_img});
		</insert>
		
		

  </mapper>
  